# Jake-Phillips-and-Kelly-Stilson

# Pelagic-Kong

### Statement
Our project is a game styled inspired by Donkey Kong. 
This is personal for us because Jacob's girlfriends', grand-father helped to develop the original Donkey Kong 
and Kelly has played it a couple times.
It is interesting because we both wrote similar games in C++ for previous courses and we are using those games as inspiration.

We hope to learn more about the similarities and differences between OOP and Functional Programming techniques and gain a better
understanding of the benefits of the each of the methods.

### Analysis
- Will you use data abstraction? How?
The player character, and stages will utilize data abstraction in that the inner workings of each item will be hidden from the main game driver. 
- Will you use recursion? 
We plan to use recursion in the main function to run the game. 
- Will you use map/filter/reduce?
We plan to use map to create the background/stage layout for the game.
- Will you use object-orientation? 
We plan to use Object -orientation with our main Character, enemies, etc. They will have characteristics that will change, but will be 
passed to the game as whole object. 

- Will you use state-modification approaches? 
We will use state-modification approaches to maintain the state of the game(win, lost, etc).
- Will you build an expression evaluator, like we did in the symbolic differentatior and the metacircular evaluator?
No, we do not plan to do this at this time.
- Will you use lazy evaluation approaches?
WE do not plan on using lazy evaluation approaches at this time.

**Your project will be graded, in part, by the extent to which you adopt approaches from the course into your implementation, _and_ your discussion about this.**

### External Technologies
If possible, we would like the game to have the ability to save high-scores in a database on the web.
In order to this, we would have to create a database to store the information, have the game access it, and allow the player
to decide if they want to store it for future reference.

We may incorporate sounds or images from the web.

### Deliverable and Demonstration
The end game is a game.
During the live demo people should be able to play it, and enjoy it. They will be able to compete to beat their friends, or prove 
to their enemies that they are superior.

### Evaluation of Results
We will know we are sucessfull if people are able to play the game.
Frustration regarding the outcome, or score, of the game is not a concern when evaluating success or failure on our part.

## Architecture Diagram
<!-- Embedded image, so it can change if we need it to without having to reload it... --> 
<!-- https://www.gliffy.com/go/share/image/sog6wdsn426669cb6gvi.png?utm_medium=live-embed&utm_source=googleapps --> 
![alt tag](https://www.gliffy.com/go/share/image/sog6wdsn426669cb6gvi.png?utm_medium=live-embed&utm_source=googleapps)

## Schedule
Lots of hard work and determination, late nights and frustration. Hopefully no smashed computers.

### First Milestone (Sun Apr 9)

- [x]  Splash Screen(Main menu)  
- [x]  Stage One-Background Tiles  
- [x]  Character Image  
- [ ]  Character movement  
- [x]  Enemy Image  
- [ ]  Enemy Movement  
- [x]  Score calculations  

### Second Milestone (Sun Apr 16)

- [ ]  Stage One complete  
- [ ]  Stage Two thru Five-Background tiles  
- [ ]  Character movement
- [ ]  Enemy Movement 
- [ ]  Character Development- Added Super Powers  
- [ ]  Score Tracking  

### Public Presentation (Mon Apr 24, Wed Apr 26, or Fri Apr 28 [your date to be determined later])

- [ ]  Stage One thru Five complete  
- [ ]  All Character movement and interactions  
- [ ]  High scores tracked and stored in database.  


## Group Responsibilities

### Jake Phillips @Jacob-Phillips
will write the code responsible for the main menu, the score calculations, tracking and saving to database and the tiles.

### Kelly Stilson @Stilsonkl
will create the images used in the game, the background images and layout, character images, enemy images, and functions used to move them.  
